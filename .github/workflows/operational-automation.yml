name: LDAP Automation
on:
  workflow_dispatch:
    inputs:
        environment:
            required: true
            type: choice
            options:
              - "dev"
        command_args:
            required: true
            type: choice
            options:
              - "test"
            
jobs:
    deploy:
        name: Create ECS Task in delius-core ${{ github.event.inputs.environment }}
        runs-on: ubuntu-latest
        environment: delius-core-${{ github.event.inputs.environment }}
        steps:
          - name: Checkout code
            uses: actions/checkout@v2
            
          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v2
            with:
                aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
                aws-secret-access-key: ${{ secrets.CICD_SECRET_ACCESS_KEY }}
                aws-region: "eu-west-2"
          - name: Template task def
            uses: christherama/render-json-template@v1
            id: render
            with:
                # Path to JSON file serving as the template for rendering an output file. Required.
                json-file-path: operational-automation/automation-task-def.json
                # Multi-line string containing key/value pairs of JSON property paths and desired property values
                field-value-pairs: |
                    $.containerDefinitions[0].command: ["ldap-automation", "${{ github.event.inputs.command_args }}"]
                    $.executionRoleArn: "arn:aws:iam::${{vars.AWS_ACCOUNT_ID}}:role/${{ github.event.inputs.environment }}-ldap-task"
                    $.taskRoleArn: "arn:aws:iam::${{vars.AWS_ACCOUNT_ID}}:role/${{ github.event.inputs.environment }}-ldap-task-exec"
                    $.containerDefinitions[0].image: "${{ vars.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/delius-core-ldap-automation-ecr-repo:${{ vars.LDAP_AUTOMATION_IMAGE_TAG }}"
                    $.containerDefinitions[0].containerName: "ldap-automation-task-${{ github.run_id }}"
                    $.containerDefinitions[0].secrets: [{"name": "LDAP_HOST", "valueFrom": "arn:aws:ssm:${{vars.AWS_REGION}}:${{vars.AWS_ACCOUNT_ID}}:parameter/delius-core/LDAP_HOST"}, {"name": "LDAP_USER", "valueFrom": "arn:aws:ssm:${{vars.AWS_REGION}}:${{vars.AWS_ACCOUNT_ID}}:parameter/delius-core/LDAP_PRINCIPAL"}, {"name": "LDAP_PASSWORD", "valueFrom": "arn:aws:secretsmanager:${{vars.AWS_REGION}}:${{vars.AWS_ACCOUNT_ID}}:secret:delius-core-dev-openldap-bind-password-CagKSo"}]
          - name: Show rendered user service task
            if: github.ref != 'refs/heads/main'
            run: cat ${{ steps.render.outputs.rendered-json-file }}
          - name: Run Standalone ECS Task
            run: |
                task_definition=$(aws ecs register-task-definition --cli-input-json file://${{ steps.render.outputs.rendered-json-file }})
                task_definition_arn=$(echo $task_definition | jq -r '.taskDefinition.taskDefinitionArn')

                aws ecs run-task --cluster ${{ vars.CLUSTER_ARN }} --task-definition $task_definition_arn
          - name: Delete Task Definition
            run: |
                aws ecs deregister-task-definition --task-definition $task_definition_arn